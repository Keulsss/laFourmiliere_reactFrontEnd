{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","props","state","events","fetch","then","response","ok","json","Error","setState","catch","history","push","console","log","this","allEvents","map","event","index","className","role","aria-labelledby","href","src","image","url","alt","format","start_time","name","city","zip_code","noEvent","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAqFeA,G,wDAhFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,IAHO,E,gEAOE,IAAD,OAElBC,MADY,wBAETC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAM,mCAEjBJ,MAAK,SAAAC,GAAQ,OAAI,EAAKI,SAAS,CAAEP,OAAQG,OACzCK,OAAM,kBAAM,EAAKV,MAAMW,QAAQC,KAAK,U,+BAIvCC,QAAQC,IAAIC,KAAKd,OADV,IAECC,EAAWa,KAAKd,MAAhBC,OACFc,EAAYd,EAAOe,KAAI,SAACC,EAAOC,GAAR,OAC3B,qBAEEC,UAAU,uBACVC,KAAK,WACLC,kBAAgB,gBAJlB,SAME,qBAAKF,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGG,KAAK,IAAIH,UAAU,qBAAtB,SACE,qBACEA,UAAU,WACVI,IAAKN,EAAMO,MAAMC,IACjBC,IAAI,qBAGR,sBAAKP,UAAU,YAAf,UACE,oBAAIA,UAAU,0BAAd,SACE,cAAC,IAAD,CAAQQ,OAAO,OAAf,SAAuBV,EAAMW,eAE/B,oBAAIT,UAAU,aAAd,SACE,mBAAGG,KAAK,IAAR,SAAaL,EAAMY,SAErB,uBAAMV,UAAU,YAAhB,UACGF,EAAMa,KADT,MACkBb,EAAMc,2BAzB/Bb,MAmCHc,EACJ,qBACEb,UAAU,uBACVC,KAAK,WACLC,kBAAgB,gBAHlB,SAKE,qBAAKF,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,0EAOV,OAAO,8BAAMlB,EAAOgC,OAAS,EAAIlB,EAAYiB,Q,GA7E/BE,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d2ee597.chunk.js","sourcesContent":["import React from \"react\";\nimport Moment from \"react-moment\";\nimport \"./scss/style.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n  }\n\n  componentDidMount() {\n    const url = \"/api/v1/events/index\";\n    fetch(url)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then(response => this.setState({ events: response }))\n      .catch(() => this.props.history.push(\"/\"));\n  }\n\n  render() {\n    console.log(this.state);\n    const { events } = this.state;\n    const allEvents = events.map((event, index) => (\n      <div\n        key={index}\n        className=\"tab-pane show active\"\n        role=\"tabpanel\"\n        aria-labelledby=\"component-1-1\"\n      >\n        <div className=\"component-example\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 col-lg-12\">\n                <div className=\"card card-minimal\">\n                  <a href=\"#\" className=\"card-img-container\">\n                    <img\n                      className=\"card-img\"\n                      src={event.image.url}\n                      alt=\"Card image cap\"\n                    />\n                  </a>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title text-primary\">\n                      <Moment format=\"llll\">{event.start_time}</Moment>\n                    </h5>\n                    <h5 className=\"card-title\">\n                      <a href=\"#\">{event.name}</a>\n                    </h5>\n                    <span className=\"card-meta\">\n                      {event.city} - {event.zip_code}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ));\n    const noEvent = (\n      <div\n        className=\"tab-pane show active\"\n        role=\"tabpanel\"\n        aria-labelledby=\"component-1-1\"\n      >\n        <div className=\"component-example\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <h5>Aucun évènement créé</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    return <div>{events.length > 0 ? allEvents : noEvent}</div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}